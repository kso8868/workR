#오후수업
#주행거리와 제동거리 사이의 회귀모델
str(cars)
head(cars)
#산점도를 통한 선형 관계 확인
plot(dist~speed,data =cars)
plot(cars)
#회귀모델 구하기,
#종속 (반응) 변수 ~독립(설명)변수 순서로 지정
model <- lm(dist~speed, cars)
model
cor(model)
cor(cars)
abline(model)
coef(model)                       #매개변수(계수) _ w, b값 출력
cars
fitted(model)                     #훈련data에 있는 샘플에 대한 예측값
residuals(model)                  #잔차 : 회귀식으로 추정된 값과의 차이
diviance(model)/length(speed)     #잔차 제곡합을 평균제곱오차(MES-mean squared error)로 변환
coef(model)                       #매개변수(계수) _ w, b값 출력
cars
fitted(model)                     #훈련data에 있는 샘플에 대한 예측값
residuals(model)                  #잔차 : 회귀식으로 추정된 값과의 차이
deviance(model)/length(speed)     #잔차 제곡합을 평균제곱오차(MES-mean squared error)로 변환
coef(model)                       #매개변수(계수) _ w, b값 출력
cars
fitted(model)                     #훈련data에 있는 샘플에 대한 예측값
residuals(model)                  #잔차 : 회귀식으로 추정된 값과의 차이
deviance(model)/length(cars$speed)     #잔차 제곡합을 평균제곱오차(MES-mean squared error)로 변환
b <- coef(model)[1]
w <- coef(model)[2]
speed <- 21.5
dist <- W*speed+b
dist
b <- coef(model)[1]
W <- coef(model)[2]
speed <- 21.5
dist <- W*speed+b
dist
b <- coef(model)[1]
b
W <- coef(model)[2]
W
speed <- 21.5
dist <- W*speed+b
dist
fitted(model)
b
W
df <- data.frame(speed=c(21.5, 25.0, 25.5, 26.0, 26.5, 27.5, 28.0))
predict(model, df) #예측 수행 함수
plot(df$speed, predict(model, df), col = 'red', cex=2, pch=20)
abline(model)
cars
predict(model, df)
speed <- cars[ ,1]
pred <- W*speed + b
pred
compare <- data.frame(pred, cars[,2],
pred-cars[,2])
compare
colnames(compare) <- c('예상', '실제', '오차')
head(fitted(model), 3)       #예측
head(residuals(model), 3)    #추정된 값과의 차이
head(compare, 3)
str(car)
str(cars)
summary(model)
str(cars)
hear(cars)
car_model <- lm(dist~speed, data= cars)
coef(car_model)
plot(car_model);abline(car_model,col='red')
women_model <- lm(weights~height, data= women)
coef(women_model)
plot(women_model)
abline(women_model, col ='red')
summary(women_model)
str(cars)
hear(cars)
car_model <- lm(dist~speed, data= cars)
coef(car_model)
plot(car_model);abline(car_model,col='red')
coef(car_model)
plot(car_model);abline(car_model,col='red')
women_model <- lm(weights~height, data= women)
coef(women_model)
plot(women_model)
abline(women_model, col ='red')
summary(women_model)
str(cars)
head(cars)
car_model <- lm(dist~speed, data= cars)
coef(car_model)
plot(car_model);abline(car_model,col='red')
women_model <- lm(weight~height, data= women)
coef(women_model)
plot(women_model)
str(cars)
head(cars)
car_model <- lm(dist~speed, data= cars)
coef(car_model)
plot(car_model);abline(car_model,col='red')
summary(car_model)
str(women)
head(women)
women_model <- lm(weight~height, data= women)
coef(women_model)
plot(women_model)
abline(women_model, col ='red')
summary(women_model)
# 문1)
# state.x77 데이터셋에서 문맹률(Illiteracy)을 이용해 범죄율(Murder)을 예측
# 하는 단순선형 회귀모델을 만드시오. 그리고 문맹률이 0.5, 1.0, 1.5일 때 범
# 죄율을 예측하여 보시오.
state.x77
# 문1)
# state.x77 데이터셋에서 문맹률(Illiteracy)을 이용해 범죄율(Murder)을 예측
# 하는 단순선형 회귀모델을 만드시오. 그리고 문맹률이 0.5, 1.0, 1.5일 때 범
# 죄율을 예측하여 보시오.
str(state.x77)
data.frame(state.x77)
plot(dist~speed,data =cars)
plot(cars)
plot(Murder~Illiteracy,data =st)
st<- data.frame(state.x77)
plot(Murder~Illiteracy,data =st)
plot(Murder~Illiteracy,data =st)
lm(Murder~Illiteracy,data =st)
plot(Murder~Illiteracy,data =st)
model <- lm(Murder~Illiteracy,data =st)
abline(model)
df <- data.frame(Illiteracy=c(0.5, 1.0, 1.5))
predict(model, df)
#문2)
# trees 데이터셋에서 나무둘레(Girth)로 나무의 볼륨(Volume)을 예측하는 단
# 선형 회귀모델을 만드시오. 그리고 나무 둘레가 8.5, 9.0, 9.5일 때, 나무의
# 볼륨(Volume)을 예측하여 보시오.
str(trees)
plot(Volume~Girth,data = trees)
model1 <- lm(Volume~Girth, data = trees)
abline(model1)
df1 <- data.frame(Girth=c(0.5, 1.0, 1.5))
predict(model1, df1)
df1 <- data.frame(Girth=c(8.5, 9.0, 9.5))
predict(model1, df1)
#
# 문3)
#
# 문3)
# pressure 데이터셋에서 온도(temperature)로 기압(pressure)을 예측하는 단
# 순선형 회귀모델을 만드시오. 그리고 온도가 65, 95, 155일 때 기압을 예측
# 하여 보시오.
str(pressure)
str(pressure)
plot(pressure~temperature,data = pressure)
model2 <- lm(pressure~temperature, data = pressure)
abline(model2)
df2 <- data.frame(temperature=c(65, 95, 155))
predict(model2, df2)
#
# 문3)
# pressure 데이터셋에서 온도(temperature)로 기압(pressure)을 예측하는 단
# 순선형 회귀모델을 만드시오. 그리고 온도가 65, 95, 155일 때 기압을 예측
# 하여 보시오.
str(pressure)
plot(pressure~temperature,data = pressure)
model2 <- lm(pressure~temperature, data = pressure)
abline(model2)
df2 <- data.frame(temperature=c(65, 95, 155))
predict(model2, df2)
