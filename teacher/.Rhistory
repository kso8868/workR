library(xlsx)
detach("package:xlsx", unload = TRUE)
#2주 1번째
setwd("D:/test1/workR/teacher")
df <- read.table(file="airquality.txt",header=T)
df
class(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
library(rJava)
library(xlsx)
df.xlsx <- read.xlsx(file="airquality.txt", sheetIndex = 1, encoding = "UTF-8")
df.xlsx <- read.xlsx(file="airquality.xlsx", sheetIndex = 1, encoding = "UTF-8")
df.xlsx <- read.xlsx(file="airquality.xlsx", sheetIndex = 1, encoding = "UTF-8")
df.xlsx
class(df.xlsx)
st(df.xlsx)
head(df.xlsx,3)
tail(df.xlsx,3)
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx,3)
tail(df.xlsx,3)
df
class(df)
dim(df)
str(df)
head(df,3)
tail(df,3)
df.xlsx
class(df.xlsx)
str(df.xlsx)
head(df.xlsx,3)
tail(df.xlsx,3)
score <- c(76,84,69,50,95,6,82,71,88,84)
which(score==69)
which(score>=85)
max(score)
which.max(score)
min(score)
which.min(score)
idx <- which(score>=60)
score[idx] <- 61
score
idx <- which(iris[,1:4]>5.0, arr.ind=T)
idx
idx <- which(score>=60)
score[idx] <- 61
score
idx <- which(iris[,1:4]>5.0, arr.ind=T)
idx
favorite <- c('WINTER','SUMMER','SPRING','SUMMER','SUMMER','FALL','FALL','SUMMER','SPRING')
favorite
class(favorite)
table(favorite)
table(favorite)/length(favorite)
ds <- table(favorite)
ds
barplot(ds,main = 'favorite season')
table(favorite)
table(favorite)/length(favorite)
ds <- table(favorite)
ds
class(favorite)
table(favorite)
table(favorite)/length(favorite)
ds <- table(favorite)
ds
barplot(ds,main = 'favorite season')
ds.new <- ds[c(2,3,1,4)]
ds.new
barplot(ds.new,main ='favorite season')
table(favorite)
pie(ds, main= 'favorite season')
pie(ds.new, main= 'favorite season')
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color)
ds
barplot(ds, main = "favorite season")
colors <- c('green','red', 'blue')
names(ds) <- colors
ds
barplot(ds, main = "favorite season",col = colors)
pie(ds, main = "favorite season")
favorite.color <- c(2,3,2,1,1,2,2,1,3,2,1,3,2,1,2)
ds <- table(favorite.color)
ds
barplot(ds, main = "favorite season")
colors <- c('green','red', 'blue')
names(ds) <- colors
ds
barplot(ds, main = "favorite season",col = colors)
pie(ds, main = "favorite season",col = colors)
barplot(ds,main = 'favorite season')
#단일변수(일변량) 연속형 자료 탐색
#
weight <- c(60,62,64,65,68,69)
weight
weight.heavy <- c(weight,120)
weight.heavy
#평균
mean(weight)
mean(weight.heavy)
#중앙값
median(weight)
median(weight.heavy)
#절사평균
mean(weight,trim = 0.2)
mean(weight.heavy, trim=0.2)
#사분위수
quantite(weight.heavy)
quantile(weight.heavy, (0:10)/10)
quantite(weight.heavy)
quantile(weight.heavy)
quantile(weight.heavy, (0:10)/10)
summary(weight.heavy)
#분산
var(weight)
#표준편차
sd(weight)
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(range(weight))
##산포(distribution) - 값이 퍼져있는 정도 파악
#분산
var(weight)
#표준편차
sd(weight)
#값의 범위(최소값과 최대값)
range(weight)
#최대값과 최소값의 차이
diff(range(weight))
#histogram : 연속형 자료의 분포를 시각화
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
str(cars)
dist <- cars[,2]
hist(dist,main ='Histogram for 제도거리',
xlab='제동거리', ylab='빈도수',
Border='blue',col='green',
las=2, breaks=5 )
#histogram : 연속형 자료의 분포를 시각화
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
str(cars)
dist <- cars[,2]
hist(dist,main ='Histogram for 제도거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=2, breaks=5 )
str(cars)
dist <- cars[,2]
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=2, breaks=5 )
#histogram : 연속형 자료의 분포를 시각화
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
str(cars)
dist <- cars[,2]
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=2, breaks=5 )
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=1, breaks=5 )
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=0, breaks=5 )
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=1, breaks=5 )
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=2, breaks=5 )
boxplot(dist,main="자동차 제동거리")
boxplot.stats(dist)
boxplot.stats(dist)$stats #정상범위 사분위수
boxplot.stats(dist)$n     #관측치 개수
boxplot.stats(dist)$conf  #중앙값 신뢰구간
boxplot.stats(dist)$out   #이상치(특이값) 목록
#일변량중 그룹으로 구성된 자료의 상자그림
boxplot(Petal.Length~Species,
data=iris,
main='품종별 꽃잎의 길이')
boxplot(iris$Petal.Length~iris$Species,
main='품종별 꽃잎의 길이')
#1개 화면에 여러 그래프 작성 팁
par(mkfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
par(mfrow=c(1,1))               #가상화면 분할 해제
par(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
par(mfrow=c(1,1))               #가상화면 분할 해제
par(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
par(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$cyl),main = "Cyl",
xlab = "cyl", ylab = "freq",
col="red")
par(mfrow=c(1,1))               #가상화면 분할 해제
par(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
par(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$cyl),main = "Cyl",
xlab = "cyl", ylab = "freq",
col="red")
par(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
barplot(table(mtcars$cyl),main = "Cyl",
xlab = "cyl", ylab = "freq",
col="red")
par(mfrow=c(1,1))
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=2, breaks=5 )
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=2, breaks=6 )
hist(dist,main ='Histogram for 제동거리',
xlab='제동거리', ylab='빈도수',
border='blue',col='green',
las=2, breaks=5 )
ar(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
barplot(table(mtcars$cyl),main = "Cyl",
xlab = "cyl", ylab = "freq",
col="red")
par(mfrow=c(1,3))              #1x3가상화면 분할
barplot(table(mtcars$carb),main = "c",
xlab = "carburetors", ylab = "freq",
col="green")
barplot(table(mtcars$cyl),main = "Cyl",
xlab = "cyl", ylab = "freq",
col="red")
boxplot(iris$Petal.Length~iris$Species,
main='품종별 꽃잎의 길이')
par(mfrow=c(1,1))               #가상화면 분할 해제
# 문1)
# 어떤 학급의 성별이 다음과 같을 때 주어진 문제를 해결하기 위한 R 코드를 작성하시오.
#
# F F F M M F F F M M
#
# 1. 위의 자료를 gender 벡터에 저장하시오.
gender <- c(F, F, F, M, M, F, F, F, M, M)
gender <- c(F, F, F, M, M, F, F, F, M, M)
gender <- c('F', 'F', 'F', 'M', 'M', 'F', 'F', 'F', 'M', 'M')
gender
table(favorite)/length(favorite)
class(favorite)
# 2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
table(gender)
gen1<- table(gender)
gen1
barplot(gen1,main = 'gender')
# 4. gender에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(gen1, main=  'gender')
season <- c('여름', '겨울', '봄', '가을', '여름', '가을', '겨울', '여름', '여름', '가을')
season
# 2. season에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
table(season)
se1 <- table(season)
se1 <- table(season)
sｅ１
se1 <- table(season)
se1
# 3. season에 있는 값들에 대해 막대그래프를 작성하여 출력하시오.
barplot(se1,main = 'season')
# 4. season에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(se1, main=  'season')
score
score <- c(90, 85, 73, 80, 85, 65, 78, 50, 68, 96)
names(score) <- c('KOR', 'ENG', 'ATH', 'HIST', 'SOC', 'MUSIC', 'BIO', 'EARTH', 'PHY', 'ART')
score
score
mean(score)
median(score)
# 4. 전체 성적의 표준편차를 출력하시오.
var(score)
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
names(max(score))
colnames(max(score))
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
max(score)
which.max(score)
names.max(score)
which.max(score)
# 6. 성적에 대한 상자그림을 작성하고, 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score)
score
summary(weight.heavy)
boxplot.stats(score)
boxplot.stats(score)$out
hist(score, main ='학생 성적',
xlab='제동거리', ylab='빈도수',col='violet')
#
hist(score, main ='학생 성적',
xlab='성적', ylab='빈도수',col='violet')
#
# 문4)
# R에서 제공하는 mtcars 데이터셋에 대해 다음 문제를 해결하기 위한 R코드를 작성하시오.
class(mtcars)
mtcars
head(mtcars)
#
# 1. 중량(wt)의 평균값, 중앙값, 절사평균값(절사범위: 15%), 표준편차를 각각 구하시오.
mean(mtcars$wt)
median(mtcars$wt)
mean(mtcars$wt, trim=0.15)
sd(mtcars$wt)
# 2. 중량(wt)에 대해 summary( ) 함수의 적용 결과를 출력하시오.
summary(mtcars$wt)
# 3. 실린더수(cyl)에 대해 도수분포표를 출력하시오.
table(mtcars$cyl)
cyl1<- table(mtcars$cyl)
cyl1
# 4. 앞에서 구한 도수분포표를 막대그래프로 출력하시오.
barplot(cyl1,main = 'cyl')
barplot(cyl1,main = 'cyl')
hist(mtcars$wt,main = "중량",xlab = 'wt',ylab ='빈도' )
# 6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars$wt)
# 6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars$wt)
boxplot.stats(mtcars$wt)
# 6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(mtcars$wt,xlab='중량')
boxplot(mtcars$gear~mtcars$mpg,
main='기어별 연비')
boxplot(mtcars$mpg~mtcars$gear,
main='기어별 연비')
boxplot(mtcars$disp,xlab='배기량',ylab='범위',outline = )
boxplot.stats(mtcars$disp)
boxplot(mtcars$mpg~mtcars$gear,
main='기어별 연비')
boxplot.stats(mtcars$disp)
