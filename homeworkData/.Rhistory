# 1. state.x77을 변환하여 st에 data frame으로 작성
st <- data.frame(state.x77)
class(st)                   #확인절차
# 2. st의 내용을 출력
st
# 3. st의 열 이름 출력
colnames(st)
# 4. st의 행 이름 출력
rownames(st)
# 5. st의 행의 개수와 열의 개수 출력
dim(st)
# 6. st의 요약 정보 출력
str(st)
summary(st)
# 7. st의 행별 합계와 평균 출력
apply(st, 1, sum)
apply(st, 1, mean)
# 8. st의 열별 합계와 평균 출력
apply(st, 2, sum)
apply(st, 2, mean)
# 9. Florida 주의 모든 정보 출력
st['Florida', ]
# 10. 50개 주의 수입(Income) 정보만 출력
st$Income
st[ ,'Income']
# 11. Texas 주의 면적(Area)을 출력
st['Texas','Area']
# 12. Ohio 주의 인구(Population)와 수입(Income) 출력
st['Ohio',c('Population','Income')]
# 13. 인구가 5,000 이상인 주의 데이터만 출력
subset(st, Population > 5000)
# 14. 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력
A<- subset(st, Income > 4500)
A[ ,c('Population','Income','Area')]
# 15. 수입이 4,500 이상인 주는 몇 개인지 출력
B<- dim(A)
B[1]
nrow(A)
# 16. 전체 면적(Area)이 100,000 이상이고, 결빙일수(Frost)가 120 이상인 주의 정보 출력
subset(st, Area > 100000 & Frost > 120)
# 17. 인구(Population)가 2,000 미만이고, 범죄율(Murder)이 12미만인 주의 정보 출력
subset(st, Population < 2000 & Murder < 12)
# 18. 문맹률(Illiteracy)이 2.0 이상인 주의 평균 수입은 얼마인지 출력
C<- subset(st, Illiteracy > 2.0)
mean(C[,'Income'])
# 19. 문맹률(Illiteracy)이 2.0 미만인 주와 2.0 이상인 주의 평균 수입의 차이 출력
C<- subset(st, Illiteracy > 2.0)
D<- subset(st, Illiteracy < 2.0)
abs(mean(C[,'Income'])-mean(D[,'Income']))
# 20. 기대수명(Life Exp)이 가장 높은 주는 어디인지 출력
E<-st[ ,'Life.Exp']
max(E)
# 21 Pennsylvania 주보다 수입(Income)이 높은 주들 출력
G<- st['Pennsylvania', 'Income']
rownames(subset(st, G < st$Income))
# 문3)
# R에서 제공하는 mtcars 데이터셋은 자동차 모델에 대한 제원 정보를 담고 있다.
#
# 1. 이 데이터셋의 자료구조 출력
class(mtcars)
# 2. 이 데이터셋의 행의 개수와 열의 개수 출력
dim(mtcars)
# 3. 이 데이터셋 열들의 자료형 출력
str(mtcars)
# 4. 연비(mpg)가 가장 좋은 자동차 모델 출력
max(mtcars[,'mpg'])
rownames(subset(mtcars , mpg ==33.9 ))
# 5. gear가 4인 자동차 모델 중 연비가 가장 낮은 모델 출력
head(mtcars)
I<- subset(mtcars, gear==4)
min(I$mpg)
rownames(subset(mtcars , mpg ==17.8 ))
# 6. Honda Civic의 연비(mpg)와 gear 수 출력
mt1 <- mtcars['Honda Civic', ]
mt1[,c('mpg','gear')]
# 7. Pontiac Firebird 보다 연비가 좋은 자동차 모델 출력
mt2 <-mtcars['Pontiac Firebird','mpg']
subset(mtcars,mt2<mtcars$mpg)
# 8. 자동차 모델들의 평균 연비 출력
mean(mtcars$mpg)
# 9. gear의 수 종류 출력
unique(mtcars$gear)
# 문4)
# R에서 제공하는 airquality 데이터셋은 일별로 대기의 질을 측정한 정보를 담고 있다.
air<- airquality
#
# 1. 이 데이터셋의 자료구조 출력
class(air)
# 2. 이 데이터셋의 앞쪽 일부분 내용만 출력
head(air,10)
# 3. 기온(Temp)이 가장 높은 날은 언제인지 월(Month)과 일(Day) 출력
air1<- max(air$Temp)
air[rownames(subset(air,Temp==air1)),c('Month','Day')]
# 4. 6월달에 발생한 가장 강한 바람(Wind)의 세기 출력
air2<- subset(air,Month==6)
max(air2$Wind)
# 5. 7월 달의 평균 기온(Temp) 출력
air3 <- subset(air,Month==7)
mean(air3$Temp)
# 6. 오존(Ozone) 농도가 100을 넘는 날은 며칠이나 되는지 출력
air4<- dim(subset(air,Ozone>100))
air4[1]
# 문5)
# 1. R에서 제공하는 state.x77 데이터셋에서 수입(Income)이 5,000 이상인 주의 데이터에서
#수입(Income), 인구(Population), 면적(Area) 열의 값들만 추출하여 rich_state.csv에 저장
str(state.x77)
st1<- data.frame(state.x77)
str(st1)
st2<- subset(st1,Income>5000)
rich_state<- st2[,c('Income','Population','Area')]
setwd("D:/WorkR")
write.csv(rich_state,"rich_state.csv", row.names = T)
# 2. 1.에서 만든 rich_state.csv파일을 읽어서 ds 변수에 저장한 후 ds 내용 출력
setwd("D:/WorkR")
ds<- read.csv("rich_state.csv", header = T)
ds
install.packages("treemap")
* 실습 결과를 R Script file로 제출
# * R Script file 이름은 "영문본인이름_제출일날짜.R" 부여하여 제출
# * R Script file의 처음에 주석으로 본인 이름과 작성일/제출일 기록
#
#강승웅 20191209/20191210
#
# 문1)
# R에서 제공하는 mtcars 데이터셋에서 gear(기어의 수)에 대해 ggplot으로
# 막대그래프를 작성하시오. 단, 제목과 x축 레이블은 ‘기어의 수’, y축 레이블
# 은 ‘빈도수’로 나타내시오.
library(ggplot2)
View(mtcars)
str(mtcars)
ggplot(data = mtcars, aes(x=gear))+
geom_bar()+
labs(x="기어의 수",y="빈도수")
# 문2)
# R에서 제공하는 mtcars 데이터셋에서 cyl(실린더의 수)에 대해 막대 색이
# 초록색인 막대그래프를 ggplot으로 작성하시오.
ggplot(data=mtcars, mapping=aes(x=cyl))+
geom_bar(fill="green")+
labs(x="실린더의 수",y="빈도수")
# 문3)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 구간 간격이 5.0
# 인 히스토그램을 ggplot으로 작성하시오.
ggplot(mtcars, aes(x=mpg))+
geom_histogram(binwidth = 5.0)
# 문4)
# R에서 제공하는 trees 데이터셋의 Girth(나무 둘레)에 대해 ggplot으로
# 히스토그램을 작성하시오. 여기에서는 히스토그램의 제목, x축 레이블, y축
# 레이블을 한글로 표시하시오. (구간 간격은 3.0, 막대의 색은 steelblue로 한다.)
View(trees)
ggplot(trees, aes( x = Girth))+
geom_histogram(binwidth = 0.3,
fill = "steelblue")+
labs(x="나무둘레",y="빈도수")
# 문5)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를 y축으로
#하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의 수에 따라 다르게 표시한다.)
ggplot(data=mtcars, mapping=aes(x=mpg, y=wt,color=gear))+
geom_point()
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
ggplot(data=mtcars, mapping = aes(y=mpg,group=cyl,fill=cyl))+
geom_boxplot()
# 문7)
# 다음은 2015년부터 2026년도까지의 예상 인구수 추계 자료이다. 연도를
# x축으로 하여 ggplot으로 선그래프를 작성하시오.
#
# 연도		총인구 (천명)		연도		총인구 (천명)
# 2015		51014				2021		52123
# 2016		51245				2022		52261
# 2017		51446				2023		52388
# 2018		51635				2024		52504
# 2019		51811				2025		52609
# 2020		51973				2026		52704
year <- c(2015:2026)
pop <- c(51014, 51245, 51446, 51635, 51811, 51973, 52123, 52261, 52388, 52504, 52609, 52704)
pop1 <- data.frame(year,pop)
pop1
ggplot(pop1,aes(x=year,y=pop))+
geom_line(col="red")
# 문8)
# 다음과 같이 데이터셋 us를 생성한 후 물음에 답하시오. 여기서 state.x77
# 은 미국 50개 주의 통계정보가, state.division은 미국 50개 주의 지역 구분
# (예: 북부, 중부, 남부……) 정보가 저장된 데이터셋이다.
#
us <- data.frame(state.x77, state.division)
us
View(us)
# (1) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
# 또한, 타일의 면적은 Population(인구수), 타일의 색은 Income(소득)으로 나타내고,
# 각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할 수 있
# 는 것이 무엇인지 설명하시오
library(treemap)
state<- rownames(us)
us <- data.frame(us, state)
us
treemap(us,
index = c("state.division","state"),
vSize = "Population",
vColor="Income",
type="value",
bg.labels = "yellow",
title = "us")
# 미국은 전반적으로 전지역에 걸쳐 소득이 균형을 이루고 있다.
# (2) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
# 또한, 타일의 면적은 HS.Grad(고등학교 졸업률), 타일의 색은 Murder(범죄률)로 나타
# 내고, 각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할
# 수 있는 것이 무엇인지 설명하시오.
View(us)
treemap(us,
index = c("state.division","state"),
vSize = "HS.Grad",
vColor="Murder",
type="value",
bg.labels = "yellow",
title = "미국의 졸업률과 범죄률의 상관관계")
#고등학교 졸업률과 범죄률의 관계에 연관성이 없는 것으로 보인다.
# (3) us 데이터셋에 대해 x축은 Income(소득), y축은 Illiteracy(문맹률), 원의 크기는
# Population(인구수), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버
# 블차트를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하
# 시오.
symbols(us$Income,us$Illiteracy,
circles= us$Population,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="소득",
ylab="문맹률",
main="소득과 문맹률")
text(us$Income,us$Illiteracy,
rownames(us),
cex = 0.6,
col="red")
#소득과 문맹률은 음의 상관관계가 있는 것으로 보이며
#인구수가 많은 지역은 문맹률이 낮고 소득이 약 4000~5500사이에 분포해 있는 것을 볼 수 있다.
# (4) us 데이터셋에 대해 x축은 Illiteracy(문맹률), y축은 Murder(범죄률), 원의 크기
# 는 Area(면적), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버블차트
# 를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하시오.
symbols(us$Illiteracy,us$Murder,
circles= us$Area,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="문맹률",
ylab="범죄률",
main="문맹률과 범죄률")
text(us$Illiteracy,us$Murder,
rownames(us),
cex = 0.6,
col="red")
#문맹률과 범죄률은 양의 상관관계를 보이며
#면적이 넓은 지역이 범죄률과 문맹률이 높은 편이다.
ggplot(trees, aes( x = Girth))+
geom_histogram(binwidth = 0.3,
fill = "steelblue")+
labs(x="나무둘레",y="빈도수")
View(trees)
ggplot(trees, aes( x = Girth))+
geom_histogram(binwidth = 0.3,
fill = "steelblue")+
labs(title = "tree",x="나무둘레",y="빈도수")
ggplot(trees, aes( x = Girth))+
geom_histogram(binwidth = 3.0,
fill = "steelblue")+
labs(title = "검사지혜님",x="나무둘레",y="빈도수")
ggplot(data=mtcars, mapping=aes(x=mpg, y=wt,color=gear))+
geom_point()
ggplot(data=mtcars, mapping=aes(x=mpg, y=wt))+
geom_point(color=gear)
ggplot(data=mtcars, mapping=aes(x=mpg, y=wt))+
geom_point(aes(color=gear))
ggplot(data=mtcars, mapping=aes(x=mpg, y=wt, color=gear))+
geom_point()
ggplot(data=mtcars)+
geom_point(mapping=aes(x=mpg, y=wt, color=gear))
ggplot(data=mtcars, mapping = aes(y=mpg))+
geom_boxplot()
ggplot(data=mtcars, mapping = aes(y=mpg, group=cyl, fill=cyl))+
geom_boxplot()
ggplot(data=mtcars, mapping = aes(y=mpg,  fill=gear))+
geom_boxplot()
year<- c(2015:2026)
pop<- c(51014, 51245, 51446, 51635, 51811, 51973, 52123, 52261, 52388, 52504, 52609, 52704)
pop1<- data.frame(year,pop)
pop1
ggplot(pop1,aes(x=year,y=pop))+
geom_line(col="red")
# 문8)
# 다음과 같이 데이터셋 us를 생성한 후 물음에 답하시오. 여기서 state.x77
# 은 미국 50개 주의 통계정보가, state.division은 미국 50개 주의 지역 구분
# (예: 북부, 중부, 남부……) 정보가 저장된 데이터셋이다.
state.division
View(us)
library(treemap)
state<- rownames(us)
us <- data.frame(us, state)
us
treemap(us,
index = c("state.division","state"),
vSize = "Population",
vColor="Income",
type="value",
bg.labels = "yellow",
title = "us")
treemap(us,
index = c("state.division","state"),
vSize = "HS.Grad",
vColor="Murder",
type="value",
bg.labels = "yellow",
title = "미국의 졸업률과 범죄률의 상관관계")
symbols(us$Income,us$Illiteracy,
circles= us$Population,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="소득",
ylab="문맹률",
main="소득과 문맹률")
text(us$Income,us$Illiteracy,
rownames(us),
cex = 0.6,
col="red")
symbols(us$Income,us$Illiteracy,
circles= us$Population,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="소득",
ylab="문맹률",
title="소득과 문맹률")
text(us$Income,us$Illiteracy,
rownames(us),
cex = 0.6,
col="red")
symbols(us$Income,us$Illiteracy,
circles= us$Population,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="소득",
ylab="문맹률",
main="소득과 문맹률")
text(us$Income,us$Illiteracy,
rownames(us),
cex = 0.6,
col="red")
symbols(us$Income,us$Illiteracy,
circles= us$Population,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="소득",
ylab="문맹률",
main="소득과 문맹률")
symbols(us$Income,us$Illiteracy,
circles= us$Population,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="소득",
ylab="문맹률",
main="소득과 문맹률")
text(us$Income,us$Illiteracy,
rownames(us),
cex = 0.6,
col="red")
symbols(us$Illiteracy,us$Murder,
circles= us$Area,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="문맹률",
ylab="범죄률",
main="문맹률과 범죄률")
text(us$Illiteracy,us$Murder,
rownames(us),
cex = 0.6,
col="red")
#문맹률과 범죄률은 양의 상관관계를 보이며
#면적이 넓은 지역이 범죄률과 문맹률이 높은 편이다.
symbols(us$Income,us$Illiteracy,
circles= us$Population,
inches=0.3,
fg="black",
bg="green",
lwd=1.5,
xlab="소득",
ylab="문맹률",
main="소득과 문맹률")
text(us$Income,us$Illiteracy,
rownames(us),
cex = 0.6,
col="red")
treemap(us,
index = c("state.division","state"),
vSize = "HS.Grad",
vColor="Murder",
type="value",
bg.labels = "yellow",
title = "미국의 졸업률과 범죄률의 상관관계")
treemap(us,
index = c("state.division","state"),
vSize = "Population",
vColor="Income",
type="value",
bg.labels = "yellow",
title = "us")
str(acc)
setwd("c:/workR/homeworkData")
acc <- read.xlsx(file="2018년도_시군구별_월별_교통사고_자료.xlsx",sheetIndex=1, encoding="UTF-8", header=T)
acc
str(acc)
library(rJava)
library(xlsx)
library(dplyr)
setwd("c:/workR/homeworkData")
acc <- read.xlsx(file="2018년도_시군구별_월별_교통사고_자료.xlsx",sheetIndex=1, encoding="UTF-8", header=T)
acc
str(acc)
setwd("c:/workR/homeworkData")
acc <- read.xlsx(file="2018년도_시군구별_월별_교통사고_자료.xlsx",sheetIndex=1, encoding="UTF-8", header=T)
acc
str(acc)                    #'시군수' 자료가 펙터타입임.
ac<- as.character(acc$시군구)   #'시군구' Factor타입을 문자타입으로 전환
ac
traffic <-geocode(enc2utf8(ac))
traffic
traffic <-geocode(enc2utf8(ac))
traffic
geocode(enc2utf8(ac))
library(ggmap)
register_google(key='AIzaSyDlmljbgzrqBC-ug1Mr1Q1Y4gvEOkOcR_g')  #키등록
traffic <-geocode(enc2utf8(ac))
traffic
traffic
df.traffic <- data.frame(acc,lon = traffic$lon,
lat = traffic$lat)
df.traffic
cen9 <- c(126.983191,37.528566)
map9 <- get_googlemap(center = cen9,
maptype = "roadmap",
zoom=11)
gmap2<- ggmap(map9)
gmap2+
geom_point(data=df.traffic,
aes(x=lon,y=lat,size=X2018),
alpha=0.5, col="blue")+
scale_size_continuous(range = c(1,14))
cen10 <- c(126.527739, 33.383749)
map10 <- get_googlemap(center = cen10,
maptype = "roadmap",
zoom=10)
gmap3<- ggmap(map10)
gmap3+
geom_point(data=df.traffic,
aes(x=lon,y=lat,size=X2018),
alpha=0.5, col="blue")+
scale_size_continuous(range = c(4,14))
add_gu <- c("강서구청", "양천구청",
"구로구청", "영등포구청",
"동작구청", "금천구청",
"관악구청", "서초구청",
"강남구청", "송파구청",
"강동구청")
gu <- geocode(enc2utf8(add_gu))
gu
df.gu<- data.frame(lon= gu$lon,
lat=gu$lat)
df.gu
cen6 <- c(mean(df.gu$lon), mean(df.gu$lat))
map6 <- get_googlemap(center = cen6,
maptype = "roadmap",
zoom = 11,
size = c(640,640),
markers = gu)
ggmap(map6)
add_nat <- c("북한산", "설악산",
"오대산", "치악산","태백산")
nat <- geocode(enc2utf8(add_mount))
nat
add_nat <- c("북한산", "설악산",
"오대산", "치악산","태백산")
nat <- geocode(enc2utf8(add_mount))
add_mount <- c("북한산", "설악산",
"오대산", "치악산","태백산")
nat <- geocode(enc2utf8(add_mount))
nat
df.nat <- data.frame(name=add_mount, lon= nat$lon,
lat=nat$lat)
df.nat
cen8 <- c(mean(df.nat$lon), mean(df.nat$lat))
map8 <- get_googlemap(center = cen8,
maptype = "roadmap",
zoom = 8,
size = c(640,640),
markers = nat)
ggmap(map8)
gmap1 <- ggmap(map8)
gmap1+
geom_text(data=df.nat,                         #데이터셋
aes(x=lon,y=lat),                    #텍스트 위치
size=5,                              #텍스트 크기
label=df.nat$name)                   #텍
